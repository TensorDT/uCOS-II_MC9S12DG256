   2                     ;	C STARTUP FOR MC68HC12
   3                     ;	WITH AUTOMATIC DATA INITIALISATION
   4                     ;	Copyright (c) 2000 by COSMIC Software
   5                     ;
   6                     	xdef	__reset
   7                     	xdef	_exit, __stext
   8                     	xref	_main, __sbss, __memory, __idesc__, __stack
   9                     
  10                     ; this is function void _stext(void)
  11                     ; PIC = position independent code
  12 f8000               __stext:
  13 f8000               __reset:
  14 f8000 cf4000        	lds	#__stack	; initialize stack pointer
  21 f8003 cec000        	ldx	#__idesc__	; descriptor address
  23 f8006 ed31          	ldy	2,x+		; start address of prom data
  24 f8008               ibcl:
  25 f8008 a634          	ldaa	5,x+		; test flag byte
  26 f800a 2719          	beq	zbss		; no more segment
  27 f800c 2a02          	bpl	nopg		; page indicator
  28 f800e 1a02          	leax	2,x		; skip it
  29 f8010               nopg:
  30 f8010 8560          	bita	#$60		; test for moveable code segment
  31 f8012 27f4          	beq	ibcl		; yes, skip it
  32 f8014 34            	pshx			; save pointer
  33 f8015 b764          	tfr	y,d		; start address
  34 f8017 a31e          	subd	-2,x		; minus end address
  35 f8019 ee1c          	ldx	-4,x		; destination address
  41 f801b               dbcl:
  42 f801b 180a7030      	movb	1,y+,1,x+	; copy from prom to ram
  43 f801f 04b4f9        	ibne	d,dbcl		; count up and loop
  49 f8022 30            	pulx			; reload pointer to desc
  50 f8023 20e3          	bra	ibcl		; and loop
  51 f8025               zbss:
  52 f8025 ce1100        	ldx	#__sbss		; start of bss
  53 f8028 c7            	clrb			; complete zero
  54 f8029 2002          	bra	loop		; start loop
  55 f802b               zbcl:
  56 f802b 6c31          	std	2,x+		; clear byte
  57 f802d               loop:
  58 f802d 8e16ff        	cpx	#__memory	; end of bss
  59 f8030 25f9          	blo	zbcl		; no, continue
  64 f8032 164064        	jsr	_main	    ; execute main()
  66                     
  67                     ; this is function "void _exit(void)"
  68 f8035               _exit:
  69 f8035 20fe          	bra	_exit		; stay here
  70                     ;
  71                     	end
